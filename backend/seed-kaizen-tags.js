const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

const kaizenTags = [
  {
    name: 'process-improvement',
    nameVi: 'C·∫£i ti·∫øn quy tr√¨nh',
    color: '#1890ff',
    description: 'C√°c c·∫£i ti·∫øn li√™n quan ƒë·∫øn quy tr√¨nh l√†m vi·ªác'
  },
  {
    name: 'quality-control',
    nameVi: 'Ki·ªÉm so√°t ch·∫•t l∆∞·ª£ng',
    color: '#52c41a',
    description: 'C·∫£i ti·∫øn trong ki·ªÉm so√°t v√† ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng'
  },
  {
    name: 'safety-enhancement',
    nameVi: 'TƒÉng c∆∞·ªùng an to√†n',
    color: '#faad14',
    description: 'C·∫£i ti·∫øn v·ªÅ an to√†n lao ƒë·ªông v√† m√¥i tr∆∞·ªùng'
  },
  {
    name: 'cost-reduction',
    nameVi: 'Gi·∫£m chi ph√≠',
    color: '#eb2f96',
    description: 'C·∫£i ti·∫øn gi√∫p gi·∫£m chi ph√≠ s·∫£n xu·∫•t v√† v·∫≠n h√†nh'
  },
  {
    name: 'efficiency-boost',
    nameVi: 'TƒÉng hi·ªáu qu·∫£',
    color: '#722ed1',
    description: 'C·∫£i ti·∫øn n√¢ng cao hi·ªáu qu·∫£ c√¥ng vi·ªác'
  },
  {
    name: 'automation',
    nameVi: 'T·ª± ƒë·ªông h√≥a',
    color: '#13c2c2',
    description: 'C·∫£i ti·∫øn √°p d·ª•ng t·ª± ƒë·ªông h√≥a trong c√¥ng vi·ªác'
  },
  {
    name: 'digital-transformation',
    nameVi: 'Chuy·ªÉn ƒë·ªïi s·ªë',
    color: '#2f54eb',
    description: 'C·∫£i ti·∫øn li√™n quan ƒë·∫øn chuy·ªÉn ƒë·ªïi s·ªë'
  },
  {
    name: 'lean-management',
    nameVi: 'Qu·∫£n l√Ω tinh g·ªçn',
    color: '#fa8c16',
    description: '√Åp d·ª•ng nguy√™n t·∫Øc qu·∫£n l√Ω tinh g·ªçn'
  },
  {
    name: 'innovation',
    nameVi: 'ƒê·ªïi m·ªõi s√°ng t·∫°o',
    color: '#f5222d',
    description: 'C√°c √Ω t∆∞·ªüng ƒë·ªïi m·ªõi s√°ng t·∫°o'
  },
  {
    name: 'sustainability',
    nameVi: 'B·ªÅn v·ªØng',
    color: '#52c41a',
    description: 'C·∫£i ti·∫øn h∆∞·ªõng ƒë·∫øn ph√°t tri·ªÉn b·ªÅn v·ªØng'
  },
  {
    name: 'customer-satisfaction',
    nameVi: 'H√†i l√≤ng kh√°ch h√†ng',
    color: '#1890ff',
    description: 'C·∫£i ti·∫øn n√¢ng cao s·ª± h√†i l√≤ng c·ªßa kh√°ch h√†ng'
  },
  {
    name: 'employee-engagement',
    nameVi: 'G·∫Øn k·∫øt nh√¢n vi√™n',
    color: '#722ed1',
    description: 'C·∫£i ti·∫øn tƒÉng c∆∞·ªùng s·ª± g·∫Øn k·∫øt c·ªßa nh√¢n vi√™n'
  },
  {
    name: 'technology-upgrade',
    nameVi: 'N√¢ng c·∫•p c√¥ng ngh·ªá',
    color: '#13c2c2',
    description: 'C·∫£i ti·∫øn n√¢ng c·∫•p c√¥ng ngh·ªá v√† thi·∫øt b·ªã'
  },
  {
    name: 'workplace-optimization',
    nameVi: 'T·ªëi ∆∞u n∆°i l√†m vi·ªác',
    color: '#faad14',
    description: 'C·∫£i ti·∫øn t·ªëi ∆∞u kh√¥ng gian v√† m√¥i tr∆∞·ªùng l√†m vi·ªác'
  },
  {
    name: 'communication-improvement',
    nameVi: 'C·∫£i thi·ªán giao ti·∫øp',
    color: '#eb2f96',
    description: 'C·∫£i ti·∫øn trong giao ti·∫øp v√† trao ƒë·ªïi th√¥ng tin'
  }
];

async function seedKaizenTags() {
  try {
    console.log('üå± B·∫Øt ƒë·∫ßu seed d·ªØ li·ªáu Kaizen Tags...');

    for (const tag of kaizenTags) {
      const existingTag = await prisma.kaizenTag.findUnique({
        where: { name: tag.name }
      });

      if (existingTag) {
        console.log(`‚úÖ Tag "${tag.name}" ƒë√£ t·ªìn t·∫°i, b·ªè qua...`);
        continue;
      }

      const createdTag = await prisma.kaizenTag.create({
        data: tag
      });

      console.log(`‚úÖ ƒê√£ t·∫°o tag: ${createdTag.nameVi} (${createdTag.name})`);
    }

    console.log('üéâ Ho√†n th√†nh seed d·ªØ li·ªáu Kaizen Tags!');
  } catch (error) {
    console.error('‚ùå L·ªói khi seed d·ªØ li·ªáu Kaizen Tags:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ch·∫°y seed n·∫øu file ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  seedKaizenTags();
}

module.exports = { seedKaizenTags };
